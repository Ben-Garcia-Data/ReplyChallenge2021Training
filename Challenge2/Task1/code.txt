def load_data(file_location):
    import ast
    #print('Begining to read file')
    file1 = open(file_location, 'r')
    Lines = file1.readlines()
    file1.close() # Close here or at end of function?
    #print('Done reading. Now to eval')

    all_tasks = []

    # Strips the newline character
    for line in Lines:

        s = line.strip().split()
        try:
            s = int(s)#
            all_tasks.append(s)
        except:
            n_list = []
            for n in s:
                n_list.append(int(n))
            all_tasks.append(n_list)



    T = all_tasks.pop(0)

    specials_len = len(all_tasks[0])
    normal_len = len(all_tasks[1])

    # specials_len = #Uncomment to override
    # normal_len =

    current_task = []
    output = []

    if specials_len != normal_len:
        for line in all_tasks:
            #print(line)
            if len(line) == specials_len:
                #print('Specials here')
                if len(current_task) != 0:
                    #print('big append')
                    output.append(current_task)
                    current_task = []
                current_task.append(line)

            else:
                current_task.append(line)
            #print(current_task)
            #print(output)
        output.append(current_task)
    else:
        print('special line lengths are the same as normal line lengths. oh dear')


    #print(output)
    return T, output

def analysis(specials, input):
    #print(input)

    def ispositive(input):
        if input > 0:
            return True
        else:
            return False

    output = sum(x for x in input if ispositive(x))

    return output

T, data = load_data(r"C:\Users\PC\Desktop\Code\replychallenge\Challenge2\Task1\input.txt")
#print(data)
casenum = 0
for task in data:
    casenum += 1
    #print(task)
    specials = task[0]
    variables = task[1]
    scans = analysis(specials, variables)
    #scans2 = analysis(specials,variables)
    print("Case #{}: {}".format(casenum,scans))
    #time.sleep(1)

#print(T)
#print(data)